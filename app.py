from flask import Flask, render_template, request, jsonify
from flask_cors import CORS
from dotenv import load_dotenv
import os
import google.generativeai as genai
import re
import traceback

load_dotenv()

app = Flask(__name__, static_folder='static', template_folder='templates')
CORS(app)

# ‚úÖ Gemini setup with recommended stable model
genai.configure(api_key=os.getenv("GEMINI_API_KEY"))
model = genai.GenerativeModel("gemini-1.5-pro-latest")

# ‚úÖ Utility to cap scores at 10
def cap_scores(text):
    return re.sub(r'(\d{2,})/10', lambda m: f"{min(int(m.group(1)), 10)}/10", text)

@app.route("/")
def home():
    return render_template("index.html")

@app.route("/review", methods=["POST"])
def review():
    try:
        data = request.get_json()
        prd_text = data.get("prd_text", "").strip()

        if not prd_text:
            return jsonify({"response": "‚ùå No PRD text provided."}), 400

        prompt = f"""
You are an expert PRD reviewer. Score the following PRD strictly between 0 and 10 on each parameter. Do not exceed 10.

Respond like this:

**1. Summary:**  
[Short one-paragraph summary]

**2. Scores:**  
Clarity:  
Structure:  
Completeness:  
Ambiguity:  
Stakeholder Consideration:  
Technical Depth:  
Feasibility:  
Business Impact Alignment:  

**3. Strengths:**  
- Bullet 1  
- Bullet 2  

**4. Areas for Improvement:**  
- Bullet 1  
- Bullet 2  

PRD:
\"\"\"
{prd_text}
\"\"\"
        """

        response = model.generate_content(prompt)

        if response.text:
            print("‚úÖ Gemini Raw Response:\n", response.text)
            safe_text = cap_scores(response.text)
            return jsonify({"response": safe_text})
        else:
            print("‚ö†Ô∏è Gemini returned empty response")
            return jsonify({"response": "‚ùå No response generated by Gemini."}), 500

    except Exception as e:
        print("üî• Error:", e)
        traceback.print_exc()
        return jsonify({"response": f"‚ùå Server error: {str(e)}"}), 500
